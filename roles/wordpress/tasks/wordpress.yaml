---
- name: Create directory for wordpress
  ansible.builtin.file:
    state: directory
    owner: "{{ wordpress_source_user }}"
    group: "{{ wordpress_source_user }}"
    path: "{{ wordpress_source_dir }}"

- name: Download wordpress archive
  become: false
  ansible.builtin.get_url:
    url: "{{ wordpress_download_url }}"
    dest: "/tmp/{{ wordpress_archive_name }}"
    mode: 0644
  register: __download_archive
  until: __download_archive is succeeded
  retries: 5
  delay: 2
  check_mode: false

- name: Unpack wordpress archive
  ansible.builtin.unarchive:
    remote_src: true
    src: "/tmp/{{ wordpress_archive_name }}"
    dest: "{{ wordpress_source_dir }}"
    creates: "{{ wordpress_source_dir }}/index.php"
    owner: "{{ wordpress_source_user }}"
    group: "{{ wordpress_source_user }}"
    extra_opts:
      - --strip-components=1
  when: not ansible_check_mode

- name: Set wordpress credentials
  ansible.builtin.lineinfile:
    dest: "{{ wordpress_source_dir }}/wp-config-sample.php"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  loop: 
    - {regexp: "^define.+?'DB_NAME',",          line: "define( 'DB_NAME', '{{ wordpress_credentials_db_name }}' )"}
    - {regexp: "^define.+?'DB_USER',",          line: "define( 'DB_USER', '{{ wordpress_credentials_db_user }}' )"}
    - {regexp: "^define.+?'DB_PASSWORD',",      line: "define( 'DB_PASSWORD', '{{ wordpress_credentials_db_password }}' )"}
    - {regexp: "^define.+?'AUTH_KEY',",         line: "define( 'AUTH_KEY', '{{ wordpress_credentials_auth_key }}' )"}
    - {regexp: "^define.+?'SECURE_AUTH_KEY',",  line: "define( 'SECURE_AUTH_KEY', '{{ wordpress_credentials_secure_auth_key }}' )"}
    - {regexp: "^define.+?'LOGGED_IN_KEY',",    line: "define( 'LOGGED_IN_KEY', '{{ wordpress_credentials_logged_in_key }}' )"}
    - {regexp: "^define.+?'NONCE_KEY',",        line: "define( 'NONCE_KEY', '{{ wordpress_credentials_nonce_key }}' )"}
    - {regexp: "^define.+?'AUTH_SALT',",        line: "define( 'AUTH_SALT', '{{ wordpress_credentials_auth_salt }}' )"}
    - {regexp: "^define.+?'SECURE_AUTH_SALT',", line: "define( 'SECURE_AUTH_SALT', '{{ wordpress_credentials_secure_auth_salt }}' )"}
    - {regexp: "^define.+?'LOGGED_IN_SALT',",   line: "define( 'LOGGED_IN_SALT', '{{ wordpress_credentials_logged_in_salt }}' )"}
    - {regexp: "^define.+?'NONCE_SALT',",       line: "define( 'NONCE_SALT', '{{ wordpress_credentials_nonce_salt }}' )"}
  when: not ansible_check_mode

- name: Copy wordpress config file
  ansible.builtin.copy:
    remote_src: true
    src: "{{ wordpress_source_dir }}/wp-config-sample.php"
    dest: "{{ wordpress_source_dir }}/wp-config.php"
  when: not ansible_check_mode
