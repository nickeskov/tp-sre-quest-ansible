---
- name: Check that the root MardiaDB config file exists
  ansible.builtin.stat:
    path: "{{ mysql_root_config_file }}"
  register: __stat_result

- block:
    # Setting the root password
    - name: Sets the root password 
      become: true
      become_user: root
      community.mysql.mysql_user:
        check_implicit_admin: true
        login_user: root
        login_password: ""
        login_host: localhost
        name: root
        password: "{{ mysql_root_password }}"
        host: localhost
        state: present
        login_unix_socket: "{{ mysql_unix_sock }}"
      no_log: true

    # Removing anonymous users
    - name: Deletes anonymous MardiaDB server user
      community.mysql.mysql_user:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        login_host: localhost
        name: ""
        host_all: true
        state: absent

    # # Removing root remote access
    - name: Secures the MardiaDB root user
      community.mysql.mysql_user:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        login_host: localhost
        name: root
        password: "{{ mysql_root_password }}"
        host: "{{ item }}"
      no_log: true
      loop: 
        - "::1"
        - "127.0.0.1"
        - "localhost"
        - "{{ ansible_fqdn }}"

    # # Removing the test database
    - name: Removes the MardiaDB test database
      community.mysql.mysql_db:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        db: test
        state: absent

    - name: Set root MardiaDB config
      ansible.builtin.template:
        src: root.my.cnf.j2
        dest: "{{ mysql_root_config_file }}"
        owner: root
        group: root
        mode: 0400
  when: not __stat_result.stat.exists
